Setting up Prometheus

Install JMX Exporter Agent on Kafka Brokers.

1. Login to Node101 box as root user.

	ssh root@bigdata.cluster.node101

2. Create Prometheus directory

	mkdir /usr/local/jmx_exporter
	cd /usr/local/jmx_exporter

3. Download the Jar and YML config file for JMX Exporter

	Jar: wget https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.15.0/jmx_prometheus_javaagent-0.15.0.jar

	YML config: wget https://raw.githubusercontent.com/prometheus/jmx_exporter/master/example_configs/kafka-2_0_0.yml

	// Should try with this Yaml also:
	// https://github.com/strimzi/strimzi-kafka-operator/blob/main/examples/metrics/kafka-metrics.yaml#L122-L134

4. Stop Kafka Service

	systemctl stop kafka.service

5. Add JMX Exporter to Kafka Service in /etc/systemd/system/kafka.service

	vi /etc/systemd/system/kafka.service

	[Unit]
	Description=Setup Kafka Service
	
	[Service]
	User=root
	Group=root
	Environment="KAFKA_HEAP_OPTS=-Xmx2048M"
	Environment="KAFKA_OPTS=-javaagent:/usr/local/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar=8080:/usr/local/jmx_exporter/kafka-2_0_0.yml"
	ExecStart=/usr/local/confluent/KafkaAsService.sh
	ExecStop=/usr/local/confluent/bin/kafka-server-stop
	SuccessExitStatus=143
	
	[Install]
	WantedBy=multi-user.target

6. Reload the units / configurations of service file.

	systemctl daemon-reload

7. Start the Kafka Service

	systemctl start kafka.service

8. If the service is failed with any error related to prometheus configuration.

	Error something like:

	Exception in thread "main" java.lang.reflect.InvocationTargetException
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:386)
		at sun.instrument.InstrumentationImpl.loadClassAndCallPremain(InstrumentationImpl.java:401)
	Caused by: mapping values are not allowed here
	 in 'reader', line 99, column 65:
	    content="{&quot;version&quot;: &quot;4&quot;, &quot;rollouts& ... 
	                                 ^
	
		at io.prometheus.jmx.shaded.org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:870)
		at io.prometheus.jmx.shaded.org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:358)
		at io.prometheus.jmx.shaded.org.yaml.snakeyaml.scanner.ScannerImpl.peekToken(ScannerImpl.java:250)
		at io.prometheus.jmx.shaded.org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd.produce(ParserImpl.java:253)
		at io.prometheus.jmx.shaded.org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
		at io.prometheus.jmx.shaded.org.yaml.snakeyaml.parser.ParserImpl.getEvent(ParserImpl.java:168)
		at io.prometheus.jmx.shaded.org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:87)
		at io.prometheus.jmx.shaded.org.yaml.snakeyaml.composer.Composer.getSingleNode(Composer.java:108)
		at io.prometheus.jmx.shaded.org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:139)
		at io.prometheus.jmx.shaded.org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:524)
		at io.prometheus.jmx.shaded.org.yaml.snakeyaml.Yaml.load(Yaml.java:467)
		at io.prometheus.jmx.shaded.io.prometheus.jmx.JmxCollector.<init>(JmxCollector.java:78)
		at io.prometheus.jmx.shaded.io.prometheus.jmx.JavaAgent.premain(JavaAgent.java:29)
		... 6 more
	FATAL ERROR in native method: processing of -javaagent failed
	Aborted (core dumped)

9. Then copy the contents of config file https://github.com/prometheus/jmx_exporter/blob/master/example_configs/kafka-2_0_0.yml and save it in a file. 

10. Then edit the path in kafka.service file and relauch the service. That should fix the issue.

	[Unit]
	Description=Setup Kafka Service
	
	[Service]
	User=root
	Group=root
	Environment="KAFKA_HEAP_OPTS=-Xmx2048M"
	Environment="KAFKA_OPTS=-javaagent:/usr/local/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar=8080:/usr/local/jmx_exporter/kafka.yml"
	ExecStart=/usr/local/confluent/KafkaAsService.sh
	ExecStop=/usr/local/confluent/bin/kafka-server-stop
	SuccessExitStatus=143
	
	[Install]
	WantedBy=multi-user.target

	systemctl daemon-reload

	systemctl start kafka.service

Install JMX Exporter Agent on Zookeeper Nodes.

1. Login to Zookeeper instance as root / sudo user

	ssh root@bigdata.cluster.node101

2. Go to the directory:

	cd /usr/local/jmx_exporter

3. Download jmx exporter jar and zookeeper.yaml from jmx_exporter github account

	JAR: wget https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.15.0/jmx_prometheus_javaagent-0.15.0.jar 

	YAML: wget https://raw.githubusercontent.com/prometheus/jmx_exporter/master/example_configs/zookeeper.yaml

4. Add JMX Exporter to Zookeeper Service in /etc/systemd/system/zookeeper.service

	vi /etc/systemd/system/zookeeper.service

	[Unit]
	Description=Setup Zookeeper Service
	
	[Service]
	User=root
	Group=root
	Environment="EXTRA_ARGS=-javaagent:/usr/local/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar=8090:/usr/local/jmx_exporter/zookeeper.yaml"
	ExecStart=/usr/local/confluent/ZookeeperAsService.sh
	ExecStop=/usr/local/confluent/bin/zookeeper-server-stop
	SuccessExitStatus=143
	
	[Install]
	WantedBy=multi-user.target

	systemctl daemon-reload

	systemctl restart zookeeper.service

5. Curl JMX exporter for Zookeeper status at

	curl bigdata.cluster.node101:8090

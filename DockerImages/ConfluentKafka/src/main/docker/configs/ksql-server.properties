#
# Copyright 2018 Confluent Inc.
#
# Licensed under the Confluent Community License (the "License"); you may not use
# this file except in compliance with the License.  You may obtain a copy of the
# License at
#
# http://www.confluent.io/confluent-community-license
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OF ANY KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations under the License.
#

#------ Endpoint config -------

### HTTP  ###
# The URL the KSQL server will listen on:
listeners=KSQL_DB_LISTENERS

### HTTPS ###
# To switch KSQL over to communicating using HTTPS comment out the 'listeners' line above
# uncomment and complete the properties below.
# See: https://docs.confluent.io/current/ksql/docs/installation/server-config/security.html#configuring-ksql-cli-for-https
#
# listeners=https://0.0.0.0:8088
# ssl.keystore.location=?
# ssl.keystore.password=?
# ssl.key.password=?

#------ Logging config -------

# Automatically create the processing log topic if it does not already exist:
# ksql.logging.processing.topic.auto.create=true
ksql.logging.processing.topic.auto.create=KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE

# Automatically create a stream within KSQL for the processing log:
# ksql.logging.processing.stream.auto.create=true
ksql.logging.processing.stream.auto.create=KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE

# Uncomment the following if you wish the errors written to the processing log to include the
# contents of the row that caused the error.
# Note: care should be taken to restrict access to the processing topic if the data KSQL is
# processing contains sensitive information.
# ksql.logging.processing.rows.include=true
ksql.logging.processing.rows.include=KSQL_LOGGING_PROCESSING_ROWS_INCLUDE

#------ External service config -------

# The set of Kafka brokers to bootstrap Kafka cluster information from:
# bootstrap.servers=localhost:9092
bootstrap.servers=BOOTSTRAP_SERVERS

# Uncomment and complete the following to enable KSQL's integration to the Confluent Schema Registry:
# ksql.schema.registry.url=http://localhost:8081
ksql.schema.registry.url=KSQL_SCHEMA_REGISTRY_URL

# Enable User Interface
# ui.enabled=true
ui.enabled=UI_ENABLED

# Determines what to do when there is no initial offset
# ksql.streams.auto.offset.reset=latest
ksql.streams.auto.offset.reset=KSQL_STREAMS_AUTO_OFFSET_RESET

# A list of host and port pairs that is used for establishing the initial connection to the Kafka cluster
# ksql.streams.bootstrap.servers=localhost:9092
ksql.streams.bootstrap.servers=BOOTSTRAP_SERVERS

# The frequency to save the position of the processor
# ksql.streams.commit.interval.ms=2000
ksql.streams.commit.interval.ms=KSQL_STREAMS_COMMIT_INTERVAL_MS

# The maximum number of memory bytes to be used for buffering across all threads
# ksql.streams.cache.max.bytes.buffering=10000000
ksql.streams.cache.max.bytes.buffering=KSQL_STREAMS_CACHE_MAX_BYTES_BUFFERING

# Indicates whether to fail if corrupt messages are read. KSQL decodes messages at runtime when reading from a Kafka topic
# ksql.fail.on.deserialization.error=true
ksql.fail.on.deserialization.error=KSQL_FAIL_ON_DESERIALIZATION_ERROR

# This number of stream threads in an instance of the Kafka Streams application
# ksql.streams.num.stream.threads=1
ksql.streams.num.stream.threads=KSQL_STREAMS_NUM_STREAM_THREADS

# The service ID of the KSQL server
# ksql.service.id=default_
ksql.service.id=KSQL_SERVICE_ID

# The default number of partitions for the topics created by KSQL.
# ksql.sink.partitions=4
ksql.sink.partitions=KSQL_SINK_PARTITIONS

# The default number of replicas for the topics created by KSQL
# ksql.sink.replicas=1
ksql.sink.replicas=KSQL_SINK_REPLICAS

# KSQL EXTENSION DIRECTORY FOR STORING UDFs
ksql.extension.dir=KSQL_KSQL_EXTENSION_DIR

# KSQL CONNECT URL
ksql.connect.url=KSQL_KSQL_CONNECT_URL
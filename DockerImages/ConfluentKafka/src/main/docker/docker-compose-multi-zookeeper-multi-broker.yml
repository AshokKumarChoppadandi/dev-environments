version: '3.5'

networks:
  kafka_cluster:
    driver: bridge
    name: kafka_cluster

services:
  zookeeper1:
    image: ashokkumarchoppadandi/confluent-kafka:5.5.3
    container_name: zookeeper1
    networks:
      - kafka_cluster
    ports:
      - "2181:2181"
    hostname: zookeeper1
    environment:
      ZOOKEEPER_DATA_DIR: \/tmp\/zookeeper
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_MAX_CLIENT_CONNECTIONS: 0
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_ENABLE_SERVER: "false"
      ZOOKEEPER_ADMIN_SERVER_PORT: 8080
      ZOOKEEPER_QUORUM: "zookeeper1,zookeeper2,zookeeper3"
      ZOOKEEPER_ID: 1
    command:
      - zookeeper
      - replicated

  zookeeper2:
    image: ashokkumarchoppadandi/confluent-kafka:5.5.3
    container_name: zookeeper2
    networks:
      - kafka_cluster
    ports:
      - "2182:2181"
    hostname: zookeeper2
    environment:
      ZOOKEEPER_DATA_DIR: \/tmp\/zookeeper
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_MAX_CLIENT_CONNECTIONS: 0
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_ENABLE_SERVER: "false"
      ZOOKEEPER_ADMIN_SERVER_PORT: 8080
      ZOOKEEPER_QUORUM: "zookeeper1,zookeeper2,zookeeper3"
      ZOOKEEPER_ID: 2
    command:
      - zookeeper
      - replicated

  zookeeper3:
    image: ashokkumarchoppadandi/confluent-kafka:5.5.3
    container_name: zookeeper3
    networks:
      - kafka_cluster
    ports:
      - "2183:2181"
    hostname: zookeeper3
    environment:
      ZOOKEEPER_DATA_DIR: \/tmp\/zookeeper
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_MAX_CLIENT_CONNECTIONS: 0
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_ENABLE_SERVER: "false"
      ZOOKEEPER_ADMIN_SERVER_PORT: 8080
      ZOOKEEPER_QUORUM: "zookeeper1,zookeeper2,zookeeper3"
      ZOOKEEPER_ID: 3
    command:
      - zookeeper
      - replicated

  broker1:
    image: ashokkumarchoppadandi/confluent-kafka:5.5.3
    container_name: broker1
    networks:
      - kafka_cluster
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    hostname: broker1
    environment:
      BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT:\/\/0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT:\/\/broker1:9092
      NUM_NETWORK_THREADS: 3
      NUM_IO_THREADS: 8
      SOCKET_SEND_BUFFER_BYTES: 102400
      SOCKET_RECEIVE_BUFFER_BYTES: 102400
      SOCKET_REQUEST_MAX_BYTES: 104857600
      LOG_DIRS: \/tmp\/kafka-logs
      NUM_PARTITIONS: 1
      NUM_RECOVERY_THREADS_PER_DATA_DIR: 1
      OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      TRANSACTION_STATE_LOG_MIN_ISR: 1
      LOG_RETENTION_HOURS: 168
      LOG_SEGMENT_BYTES: 1073741824
      LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      ZOOKEEPER_CONNECT_LIST: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181\/kafka
      ZOOKEEPER_CONNECTION_TIMEOUT_MS: 18000
      GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
      - "19092:9092"
    command: kafka

  broker2:
    image: ashokkumarchoppadandi/confluent-kafka:5.5.3
    container_name: broker2
    networks:
      - kafka_cluster
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - broker1
    hostname: broker2
    environment:
      BROKER_ID: 2
      KAFKA_LISTENERS: PLAINTEXT:\/\/0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT:\/\/broker2:9092
      NUM_NETWORK_THREADS: 3
      NUM_IO_THREADS: 8
      SOCKET_SEND_BUFFER_BYTES: 102400
      SOCKET_RECEIVE_BUFFER_BYTES: 102400
      SOCKET_REQUEST_MAX_BYTES: 104857600
      LOG_DIRS: \/tmp\/kafka-logs
      NUM_PARTITIONS: 1
      NUM_RECOVERY_THREADS_PER_DATA_DIR: 1
      OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      TRANSACTION_STATE_LOG_MIN_ISR: 1
      LOG_RETENTION_HOURS: 168
      LOG_SEGMENT_BYTES: 1073741824
      LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      ZOOKEEPER_CONNECT_LIST: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181\/kafka
      ZOOKEEPER_CONNECTION_TIMEOUT_MS: 18000
      GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
      - "29092:9092"
    command: kafka

  broker3:
    image: ashokkumarchoppadandi/confluent-kafka:5.5.3
    container_name: broker3
    networks:
      - kafka_cluster
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - broker1
      - broker2
    hostname: broker3
    environment:
      BROKER_ID: 3
      KAFKA_LISTENERS: PLAINTEXT:\/\/0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT:\/\/broker3:9092
      NUM_NETWORK_THREADS: 3
      NUM_IO_THREADS: 8
      SOCKET_SEND_BUFFER_BYTES: 102400
      SOCKET_RECEIVE_BUFFER_BYTES: 102400
      SOCKET_REQUEST_MAX_BYTES: 104857600
      LOG_DIRS: \/tmp\/kafka-logs
      NUM_PARTITIONS: 1
      NUM_RECOVERY_THREADS_PER_DATA_DIR: 1
      OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      TRANSACTION_STATE_LOG_MIN_ISR: 1
      LOG_RETENTION_HOURS: 168
      LOG_SEGMENT_BYTES: 1073741824
      LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      ZOOKEEPER_CONNECT_LIST: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181\/kafka
      ZOOKEEPER_CONNECTION_TIMEOUT_MS: 18000
      GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
      - "39092:9092"
    command: kafka

  schemaregistry:
    image: ashokkumarchoppadandi/confluent-kafka:5.5.3
    container_name: schemaregistry
    networks:
      - kafka_cluster
    depends_on:
      - broker1
      - broker2
      - broker3
    hostname: schemaregistry
    environment:
      SCHEMA_REGISTRY_LISTENERS: http:\/\/0.0.0.0:8081
      KAFKASTORE_BOOTSTRAP_SERVERS: "broker1:9092,broker2:9092,broker3:9092"
      KAFKASTORE_TOPIC: "_schemas"
      DEBUG: "true"
    ports:
      - "8081:8081"
    command: schemaregistry

  connect:
    image: ashokkumarchoppadandi/confluent-kafka:5.5.3
    container_name: connect
    networks:
      - kafka_cluster
    depends_on:
      - broker1
      - broker2
      - broker3
      - schemaregistry
    hostname: connect
    environment:
      CONNECT_WITH_AVRO_DISTRIBUTED: "true"
      BOOTSTRAP_SERVERS: broker1:9092,broker2:9092,broker3:9092
      GROUP_ID: connect-cluster
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      KEY_CONVERTER_SCHEMA_REGISTRY_URL: http:\/\/schemaregistry:8081
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http:\/\/schemaregistry:8081
      KEY_CONVERTER_SCHEMAS_ENABLE: "true"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "true"
      OFFSET_STORAGE_TOPIC: connect-offsets
      OFFSET_STORAGE_REPLICATION_FACTOR: 1
      OFFSET_STORAGE_PARTITIONS: 25
      CONFIG_STORAGE_TOPIC: connect-configs
      CONFIG_STORAGE_REPLICATION_FACTOR: 1
      STATUS_STORAGE_TOPIC: connect-status
      STATUS_STORAGE_REPLICATION_FACTOR: 1
      STATUS_STORAGE_PARTITIONS: 5
      OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_REST_HOST: 0.0.0.0
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST: connect
      CONNECT_REST_ADVERTISED_PORT: 8083
      PLUGIN_PATH: \/usr\/local\/confluent\/share\/java
    ports:
      - "8083:8083"
    command: connect

  ksql:
    image: ashokkumarchoppadandi/confluent-kafka:5.5.3
    container_name: ksql
    networks:
      - kafka_cluster
    depends_on:
      - broker1
      - broker2
      - broker3
      - schemaregistry
      - connect
    hostname: ksql
    environment:
      BOOTSTRAP_SERVERS: "broker1:9092,broker2:9092,broker3:9092"
      KSQL_DB_LISTENERS: http:\/\/0.0.0.0:8088
      KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_LOGGING_PROCESSING_ROWS_INCLUDE: "true"
      KSQL_SCHEMA_REGISTRY_URL: http:\/\/schemaregistry:8081
      UI_ENABLED: "true"
      KSQL_STREAMS_AUTO_OFFSET_RESET: latest
      KSQL_STREAMS_COMMIT_INTERVAL_MS: 2000
      KSQL_STREAMS_CACHE_MAX_BYTES_BUFFERING: 10000000
      KSQL_FAIL_ON_DESERIALIZATION_ERROR: "true"
      KSQL_STREAMS_NUM_STREAM_THREADS: 1
      KSQL_SERVICE_ID: default_
      KSQL_SINK_PARTITIONS: 4
      KSQL_SINK_REPLICAS: 1
    ports:
      - "8088:8088"
    command: ksql